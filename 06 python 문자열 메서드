#1. 기본 메서드 : 벡터 연산 불가( 매 원소마다 반복 불가)

'abc'.upper()
'ABC'
'a/b/c'.split('/')
['a', 'b', 'c']
'a/b/c'.split('/')[1]
'b'

l1=['abc,'def']
l2=['a/b/c,'d/e/f']

l1.upper() # 불가
l2.upper() # 불가
list(map(lambda x: x.upper(),l1))
 ['ABC', 'DEF']

list(map(lambda x:x.split('/'),l2))
[['a', 'b', 'c'], ['d', 'e', 'f']]

from pandas import Series, DataFrame

l1
# ['abc', 'def']
# 0    abc
# 1    def
# dtype: object
l2
# ['a/b/c', 'd/e/f']

s2.str.split('/')
# 0    [a, b, c]
# 1    [d, e, f]
# dtype: object

2) 대소 치환
s1
# 0    abc
# 1    def
# dtype: object

s1.str.upper()
0    ABC
1    DEF
dtype: object

s1.str.lower()
0    abc
1    def
dtype: object

s1.str.title()
0    Abc
1    Def
dtype: object

s1.str.replace('a','A')
# 0    Abc
# 1    def
# dtype: object

s1.str.replace('a', '')
# 0     bc
# 1    def
# dtype: object

# 천 단위 구분기호 때문에 문자로 입력된 값이라 문자열 결합으로 인식됨 
# 구분기호 문제네? 문자로 인식되어 있네? 더해줘야 되네
s3 = Series(['1,200','3,000','4,000'])
s3.sum()

s3.str.replace(',','').astype('int').sum
8200

s3 = Series(['1,200','3,000'.4,000'])
s3 = s3.str.replace(',','')
sum(list(map(lambda x: int(x), s3)))
8200

s1
# 0    abc
# 1    def
# dtype: object

# count 포함 개수 
Series(['aabbbb','abcdadd']).str.count('a')
# 0    2
# 1    2
# dtype: int64

#제거 함수 (공백, 문자)
Series(['      cd     ','        df       ']).str.strip()
Series(['      cd     ','        df       ']).str.strip().str.len()

s1
# 0    abc
# 1    def
# dtype: object

s1.str.strip('a') # 문자열 제거 
Series(['aaabaaabcd','abcdaa']).str.strip('a')
# 문자열 제거(중간값 삭제 불가)
# 0    baaabcd
# 1        bcd
# dtype: object

Series(['aaabaaabcd','abcdaa']).str.replace('a','')
# 문자열 제거(중간값 삭제 가능)

# find(위치값 return)
s3 = Series(['abc@drwill.kr','abcdef@drwill.com'])
s3.str.find('@')

# 문자열 색인(추출)
'abcde'[0:3]  # 문자열 색인
s3
s3[0:3]     # Series에서 1번째, 2번째, 3번째 원소 추출 
s3.str[0:3] # Series에서 각 원소마다 1번째, 2번째, 3번째 문자열 추출 











